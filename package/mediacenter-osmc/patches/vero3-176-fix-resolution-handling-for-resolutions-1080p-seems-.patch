diff --git a/xbmc/utils/AMLUtils.cpp b/xbmc/utils/AMLUtils.cpp
index 448095a..82ef26d 100644
--- a/xbmc/utils/AMLUtils.cpp
+++ b/xbmc/utils/AMLUtils.cpp
@@ -668,6 +668,11 @@ void aml_disable_freeScale()
   SysfsUtils::SetInt("/sys/class/graphics/fb1/free_scale", 0);
 }
 
+static bool isMaliBug()
+{
+  return false;
+}
+
 void aml_set_framebuffer_resolution(const RESOLUTION_INFO &res, std::string framebuffer_name)
 {
   aml_set_framebuffer_resolution(res.iWidth, res.iHeight, framebuffer_name);
@@ -685,8 +690,18 @@ void aml_set_framebuffer_resolution(int width, int height, std::string framebuff
     {
       vinfo.xres = width;
       vinfo.yres = height;
-      vinfo.xres_virtual = 1920;
-      vinfo.yres_virtual = 2160;
+      vinfo.xres_virtual = width;
+      vinfo.yres_virtual = height*2;
+
+      if (isMaliBug() && height < 1080)
+      {
+        // There seems to be a bug in libMali or the Mali driver which can't handle
+        // heights less than 1080 correctly. In this case we set the same virtual
+        // resolution that was used when libMali was initialized.
+        vinfo.xres_virtual = 1920;
+        vinfo.yres_virtual = 2160;
+      }
+
       vinfo.bits_per_pixel = 32;
       vinfo.activate = FB_ACTIVATE_ALL;
       ioctl(fd0, FBIOPUT_VSCREENINFO, &vinfo);
